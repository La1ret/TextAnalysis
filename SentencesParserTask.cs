using NUnit.Framework.Internal.Execution; using System.Text;  namespace TextAnalysis;  static class SentencesParserTask {     public static List<List<string>> ParseSentences(string text)     {         var sentencesList = new List<List<string>>();         char[] separatorsForSentences = { '.', '!', '?', ';', ':', '(', ')' };         char[] separatorsForWords = {'^', '#', '$', '-', '—', '+', '0', '1',                                      '2', '3', '4', '5', '6', '7', '8', '9', '=',                                      '\t', '\n', '\r', ',', '…', '“',                                      '”', '<', '>', '‘', '*', ' ', '/'};          foreach (var sentence in text.Split(separatorsForSentences))         {             var wordsList = new List<string>();             foreach (var word in sentence.Replace("\u00A0", "").Split(separatorsForWords))                 if (word != "") wordsList.Add(word.ToLower());             if (wordsList.Count != 0) sentencesList.Add(wordsList);         }         return sentencesList;     }      //public static void Compare(List<List<string>> expected, List<List<string>> actual)     //{     //    var expectedString = new StringBuilder();     //    var actualString = new StringBuilder();      //    foreach (var wordList in expected)     //        foreach (var word in wordList)     //            expectedString.Append(word);      //    foreach (var wordList in actual)     //        foreach (var word in wordList)     //            actualString.Append(word);      //    Console.WriteLine("Ожидалась длинна: {0}\nПолучена длинна:  {1}\n\nОжидаемое содержимое: \"{2}\"\nПолучено содержимое:  \"{3}\"", expected.Count, actual.Count, expectedString, actualString);     //} }